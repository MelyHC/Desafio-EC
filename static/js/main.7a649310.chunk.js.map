{"version":3,"sources":["components/Header.js","components/CardSuscription.js","views/Suscription.js","components/ModalCreditCard.js","views/CreditCard.js","views/Confirmation.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CardSuscription","plan","price","description","pack","descriptionPlan","map","i","num","key","to","Suscription","changeTypePlan","onChange","id","value","type","name","readOnly","checked","htmlFor","ModalCreditCard","otherPlan","$","document","mouseup","e","container","is","target","has","length","collapse","aria-haspopup","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","onClick","CreditCard","history","confirmData","onSubmit","required","Confirmation","href","rel","App","state","user","currentPlan","dataAllPlan","changePlan","toLowerCase","setState","preventDefault","push","dataPlan","packPlan","dataPackPlan","this","allData","objPlan","basename","path","exact","render","props","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"ykCAUeA,EARA,WACb,OACE,4BAAQC,UAAU,6BAChB,wBAAIA,UAAU,8BAAd,UCqBSC,EAvBS,SAAC,GAA6D,IAAD,IAA1DC,KAAQC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,gBAC3D,OACE,yBAAKN,UAAU,iEACb,yBAAKA,UAAU,iCACb,wBAAIA,UAAU,eAAc,0BAAMA,UAAU,gBAAhB,MAA5B,IAAqE,0BAAMA,UAAU,SAASG,GAA9F,aACA,uBAAGH,UAAU,wBAAwBI,IAEvC,wBAAIJ,UAAU,wBAEVM,EACEA,EAAgBC,KAAI,WAAuBC,GAAvB,IAAGC,EAAH,EAAGA,IAAKL,EAAR,EAAQA,YAAR,OAClB,wBAAIM,IAAKD,EAAKT,UAAS,oBAAeK,EAAKG,KAAOC,EAAM,eAAiB,KACvE,uBAAGT,UAAU,uBACZI,MAEH,mDAGR,kBAAC,IAAD,CAAMO,GAAG,SAASX,UAAU,2CAA5B,iBCESY,EAnBK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,eAAgBX,EAAW,EAAXA,KACrC,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,0BAAMY,SAAUD,EAAgBb,UAAU,IACxC,yBAAKA,UAAU,6BACb,2BAAOe,GAAG,UAAUC,MAAM,cAAWC,KAAK,QAAQC,KAAK,eAAeC,UAAQ,EAACC,QAAuB,gBAAdlB,EAAKe,OAC7F,2BAAOI,QAAQ,WAAf,oBACA,2BAAON,GAAG,UAAUC,MAAM,UAAUC,KAAK,QAAQC,KAAK,eAAeC,UAAQ,EAACC,QAAuB,YAAdlB,EAAKe,OAC5F,2BAAOI,QAAQ,WAAf,gBAA6C,0BAAMrB,UAAU,kBAAiB,0BAAMA,UAAU,oBAEhG,yBAAKA,UAAU,0DACb,kBAAC,EAAD,CAAiBE,KAAMA,QCsBlBoB,EAnCS,SAAC,GAA8F,IAA5FT,EAA2F,EAA3FA,eAAgBU,EAA2E,EAA3EA,UAA2E,IAAhErB,KAAQC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,gBAAiBW,EAAa,EAAbA,KAUvG,OARAO,IAAEC,UAAUC,SAAQ,SAACC,GACnB,IAAMC,EAAYJ,IAAE,yBAEfI,EAAUC,GAAGF,EAAEG,SAA8C,IAAnCF,EAAUG,IAAIJ,EAAEG,QAAQE,QACrDJ,EAAUK,SAAS,WAKrB,yBAAKjC,UAAU,0CAA0Ce,GAAG,QAC1D,yBAAKmB,gBAAc,OAAOlC,UAAU,sCAAsCmC,cAAY,WAAWC,cAAY,wBAAwBC,gBAAc,QAAQC,gBAAc,wBACvK,wBAAItC,UAAU,oBAAd,QAAuCiB,GACvC,iCAAOd,EAAP,YAEF,yBAAKY,GAAG,uBAAuBf,UAAU,WAAWuC,kBAAgB,eAAeC,cAAY,SAC7F,2BAAIpC,GACJ,wBAAIJ,UAAU,cAEVM,EACEA,EAAgBC,KAAI,WAAuBC,GAAvB,IAAGC,EAAH,EAAGA,IAAKL,EAAR,EAAQA,YAAR,OAClB,wBAAIM,IAAKD,EAAKT,UAAS,oBAAeK,EAAKG,KAAOC,EAAM,eAAiB,KACvE,uBAAGT,UAAU,uBACZI,MAEH,oDAIV,4BAAQJ,UAAU,sCAAsCgB,MAAOO,EAAWkB,QAAS5B,GAAnF,kBAAmHU,GAAwB,cAA3I,OCSUmB,EAtCG,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,QAASzC,EAAmD,EAAnDA,KAAMW,EAA6C,EAA7CA,eAAgB+B,EAA6B,EAA7BA,YAAarB,EAAgB,EAAhBA,UAEhE,OACE,kBAAC,WAAD,KACE,4BAAQvB,UAAU,sBAChB,wBAAIA,UAAU,OACZ,kBAAC,IAAD,CAAMW,GAAG,IAAIX,UAAU,0DADzB,cAKF,0BAAM6C,SAAU,SAAClB,GAAD,OAAOiB,EAAYD,EAAShB,IAAI3B,UAAU,eACxD,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBAAjB,sBACA,2BAAOkB,KAAK,OAAOlB,UAAU,yBAAyB8C,UAAQ,KAEhE,yBAAK9C,UAAU,cACb,2BAAOA,UAAU,oBAAjB,wBACA,2BAAOkB,KAAK,aAAalB,UAAU,4BAErC,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BACb,2BAAOA,UAAU,oBAAjB,aACA,2BAAOkB,KAAK,SAASlB,UAAU,4BAEjC,yBAAKA,UAAU,6BACb,2BAAOA,UAAU,oBAAjB,OACA,2BAAOkB,KAAK,MAAMlB,UAAU,6BAGhC,4BAAQA,UAAU,gDAAgDiB,KAAK,UAAvE,YAA0Ff,EAAKC,SAGnG,kBAAC,EAAD,CAAiBD,KAAMA,EAAMW,eAAgBA,EAAgBU,UAAWA,MCR/DwB,EAzBM,SAAC,GAAkD,IAAhD7B,EAA+C,EAA/CA,KAA+C,IAAzChB,KAAQe,EAAiC,EAAjCA,KAAMd,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,YACjD,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAKJ,UAAU,eACb,uBAAGA,UAAU,oEACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,qDACb,uBAAGA,UAAU,oBAAb,aACakB,EACX,6BAFF,oBAKA,wBAAIlB,UAAU,sBAAd,QAAyCiB,GACzC,wBAAIjB,UAAU,oBAAd,KAAoCG,EAApC,WACA,uBAAGH,UAAU,IAAII,EAAjB,IAA+BA,EAA/B,KACA,kBAAC,IAAD,CAAMJ,UAAU,kCAAkCW,GAAG,KAArD,sBAGJ,uBAAGqC,KAAK,6BAA6BlB,OAAO,SAAS9B,UAAU,kCAAkCiD,IAAI,uBAArG,kB,gBCkEQC,E,2MA7EdC,MAAQ,CACNC,KAAM,CACJlC,KAAM,UAERmC,YAAa,CACXnC,KAAM,WAERK,UAAW,CACTN,KAAM,eAERqC,YAAa,I,EA4BfC,WAAa,SAAC5B,GAAO,IAAD,EAEiB,EAAKwB,MAAhCE,EAFU,EAEVA,YAAa9B,EAFH,EAEGA,UAEjBI,EAAEG,OAAOd,MAAMwC,gBAAkBH,EAAYpC,KAAKuC,eAEpD,EAAKC,SAAS,CAAEJ,YAAa9B,EAAWA,UAAW8B,K,EAIvDT,YAAc,SAACD,EAAShB,GACtBA,EAAE+B,iBAD0B,IAGpBxC,EAASS,EAAEG,OAAXZ,KAER,EAAKuC,SAAS,CACZL,KAAM,CACJlC,KAAMA,EAAKF,SAIf2B,EAAQgB,KAAK,kB,mFA7Cb,IAAMzD,EAAO0D,EACPC,EAAWC,EAFC,EAGeC,KAAKZ,MAAhCE,EAHY,EAGZA,YAAa9B,EAHD,EAGCA,UAEbyC,EAAU9D,EAAKK,KAAI,SAAA0D,GAavB,OAXIZ,EAAYnC,KAAKsC,gBAAkBS,EAAQhD,KAAKuC,cAElDH,EAAcY,EAId1C,EAAY0C,EAGdA,EAAQ3D,gBAAkBuD,EAEnBI,KAITF,KAAKN,SAAS,CAAEH,YAAaU,EAASX,cAAa9B,gB,+BA2B3C,IAAD,SACkCwC,KAAKZ,MAAtCE,EADD,EACCA,YAAa9B,EADd,EACcA,UAAW6B,EADzB,EACyBA,KAEhC,OACE,kBAAC,IAAD,CAAQc,SAAS,eACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAaxD,eAAgB,EAAK0C,WAAYrD,KAAMmD,OACxF,kBAAC,IAAD,CAAOc,KAAK,SAASE,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuBzD,eAAgB,EAAK0C,WAAYX,YAAa,EAAKA,YAAa1C,KAAMmD,EAAa9B,UAAWA,EAAUN,WACvK,kBAAC,IAAD,CAAOkD,KAAK,gBAAgBE,OAAQ,kBAAM,kBAAC,EAAD,CAAcnD,KAAMkC,EAAKlC,KAAMhB,KAAMmD,a,GAxEvEkB,aCEZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpC,QACf8B,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCtFjEC,IAAS5B,OAAO,kBAAC,EAAD,MAAS5C,SAASyE,eAAe,SDY1C,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,cAAwB1B,OAAOC,SAAS3B,MACpDqD,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,cAAN,sBAEP5B,IAgEV,SAAiCO,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BV,OAAOC,SAASqC,eAKpBlC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAqB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCnC/BE,K","file":"static/js/main.7a649310.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"text-center bg-purple p-2\">\r\n      <h3 className=\"text-lato font-weight-bold\">Mag.</h3>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CardSuscription = ({ plan: { price, description, pack, descriptionPlan } }) => {\r\n  return (\r\n    <div className=\"card col-10 col-sm-8 col-md-6 col-lg-5 col-xl-4 p-0 rounded-0\">\r\n      <div className=\"p-3 border-bottom text-center\">\r\n        <h1 className=\"title-price\"><span className=\"simbol-price\">S/</span> <span className=\"price\">{price}</span> / AL MES</h1>\r\n        <p className=\"m-0 font-weight-bold\">{description}</p>\r\n      </div>\r\n      <ul className=\"fa-ul py-4 pr-4 pl-2\">\r\n        {\r\n          descriptionPlan ?\r\n            descriptionPlan.map(({ num, description }, i) =>\r\n              <li key={num} className={`mb-0 py-2 ${pack[i] !== num ? 'text-opacity' : ''}`}>\r\n                <i className=\"fa-li fas fa-check\" />\r\n                {description}</li>\r\n            )\r\n            : <p>Esperando lista ...</p>\r\n        }\r\n      </ul>\r\n      <Link to=\"/datos\" className=\"btn btn-purple text-white rounded-0 p-3\" >Suscribirme</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSuscription;","import React, { Fragment } from 'react';\r\nimport Header from '../components/Header';\r\nimport CardSuscription from '../components/CardSuscription';\r\n\r\nconst Suscription = ({ changeTypePlan, plan }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <form onChange={changeTypePlan} className=\"\">\r\n        <div className=\"switch switch--horizontal\">\r\n          <input id=\"radio-a\" value=\"Estándar\" type=\"radio\" name=\"first-switch\" readOnly checked={plan.type === \"Estándar\"} />\r\n          <label htmlFor=\"radio-a\">Plan Estándar</label>\r\n          <input id=\"radio-b\" value=\"Premium\" type=\"radio\" name=\"first-switch\" readOnly checked={plan.type === \"Premium\"} />\r\n          <label htmlFor=\"radio-b\">Plan Premium</label><span className=\"toggle-outside\"><span className=\"toggle-inside\"></span></span>\r\n        </div>\r\n        <div className=\"row m-0 pb-3 justify-content-center align-aitem-center\">\r\n          <CardSuscription plan={plan} />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Suscription;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nconst ModalCreditCard = ({ changeTypePlan, otherPlan, plan: { price, description, pack, descriptionPlan, type } }) => {\r\n\r\n  $(document).mouseup((e) => {\r\n    const container = $(\"#collapse-description\");\r\n\r\n    if (!container.is(e.target) && container.has(e.target).length === 0) {\r\n      container.collapse('hide');\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"fixed-bottom bg-white text-justify px-5\" id=\"plan\" >\r\n      <div aria-haspopup=\"true\" className=\"pt-3 d-flex justify-content-between\" data-toggle=\"collapse\" data-target=\"#collapse-description\" aria-expanded=\"false\" aria-controls=\"collapse-description\">\r\n        <h5 className=\"font-weight-bold\">Plan {type}</h5>\r\n        <h5>S/{price} al mes</h5>\r\n      </div>\r\n      <div id=\"collapse-description\" className=\"collapse\" aria-labelledby=\"heading-plan\" data-parent=\"#plan\">\r\n        <p>{description}</p>\r\n        <ul className=\"fa-ul ml-4\">\r\n          {\r\n            descriptionPlan ?\r\n              descriptionPlan.map(({ num, description }, i) =>\r\n                <li key={num} className={`mb-0 py-1 ${pack[i] !== num ? 'text-opacity' : ''}`}>\r\n                  <i className=\"fa-li fas fa-check\" />\r\n                  {description}</li>\r\n              )\r\n              : <p>Esperando lista ...</p>\r\n          }\r\n        </ul>\r\n      </div>\r\n      <button className=\"btn text-center btn-block link mb-2\" value={otherPlan} onClick={changeTypePlan}>Cambiar a Plan {otherPlan ? otherPlan : 'Estándar'} </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalCreditCard;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ModalCreditCard from '../components/ModalCreditCard';\r\n\r\nconst CreditCard = ({ history, plan, changeTypePlan, confirmData, otherPlan }) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className=\"bg-purple p-2 mb-3\">\r\n        <h5 className=\"m-0\">\r\n          <Link to=\"/\" className=\"fas fa-arrow-left text-white text-decoration-none m-2\" />\r\n          Tus datos\r\n        </h5>\r\n      </header>\r\n      <form onSubmit={(e) => confirmData(history, e)} className=\"row p-0 m-0\" >\r\n        <div className=\"col-11 col-sm-8 col-md-6 col-lg-5 col-xl-4 m-auto p-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Nombre y Apellidos</label>\r\n            <input name=\"name\" className=\"form-control rounded-0\" required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Número de tarjeta</label>\r\n            <input name=\"creditCard\" className=\"form-control rounded-0\" />\r\n          </div>\r\n          <div className=\"row p-0 m-0\">\r\n            <div className=\"form-group col-6 p-0 pr-2\">\r\n              <label className=\"font-weight-bold\">F. Expira</label>\r\n              <input name=\"expire\" className=\"form-control rounded-0\" />\r\n            </div>\r\n            <div className=\"form-group col-6 p-0 pl-2\">\r\n              <label className=\"font-weight-bold\">CVC</label>\r\n              <input name=\"cvc\" className=\"form-control rounded-0\" />\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-purple text-white btn-block rounded-0\" type=\"submit\">Pagar S/ {plan.price}</button>\r\n        </div>\r\n      </form>\r\n      <ModalCreditCard plan={plan} changeTypePlan={changeTypePlan} otherPlan={otherPlan} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default (CreditCard);","import React, { Fragment } from 'react';\r\nimport Header from '../components/Header';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Confirmation = ({ name, plan: { type, price, description } }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <div className=\"text-center\">\r\n        <i className=\"fas fa-check bg-white rounded-circle w-0 p-3 mt-5 mb-3 icon-big\" />\r\n        <div className=\"row m-0 p-0\">\r\n          <div className=\"col-11 col-sm-8 col-md-6 col-lg-5 col-xl-4 m-auto\">\r\n            <p className=\"font-weight-bold\">\r\n              Bienvenio {name}\r\n              <br />\r\n              has adquirido el\r\n            </p>\r\n            <h3 className=\"font-weight-bolder\">Plan {type}</h3>\r\n            <h5 className=\"font-weight-bold\">S/{price} al mes</h5>\r\n            <p className=\"\">{description} {description} </p>\r\n            <Link className=\"link text-body font-weight-bold\" to=\"/\">Ir a ver mi plan</Link>\r\n          </div>\r\n        </div>\r\n        <a href=\"https://mag.elcomercio.pe/\" target=\"_blank\" className=\"fixed-bottom link text-body m-3\" rel=\"noopener noreferrer\">Ir a Mag.pe</a>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Confirmation;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Suscription from './views/Suscription';\r\nimport CreditCard from './views/CreditCard';\r\nimport Confirmation from './views/Confirmation';\r\n\r\nimport dataPlan from './data/plan.json';\r\nimport dataPackPlan from './data/packPlan.json';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    user: {\r\n      name: 'Nombre'\r\n    },\r\n    currentPlan: {\r\n      name: 'Premium'\r\n    },\r\n    otherPlan: {\r\n      type: 'Estándar'\r\n    },\r\n    dataAllPlan: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const plan = dataPlan;\r\n    const packPlan = dataPackPlan;\r\n    let { currentPlan, otherPlan } = this.state;\r\n\r\n    const allData = plan.map(objPlan => {\r\n\r\n      if (currentPlan.name.toLowerCase() === objPlan.type.toLowerCase()) {\r\n\r\n        currentPlan = objPlan;\r\n\r\n      } else {\r\n\r\n        otherPlan = objPlan;\r\n      }\r\n\r\n      objPlan.descriptionPlan = packPlan;\r\n\r\n      return objPlan;\r\n    })\r\n\r\n\r\n    this.setState({ dataAllPlan: allData, currentPlan, otherPlan });\r\n  }\r\n\r\n  changePlan = (e) => {\r\n\r\n    const { currentPlan, otherPlan } = this.state;\r\n\r\n    if (e.target.value.toLowerCase() !== currentPlan.type.toLowerCase()) {\r\n\r\n      this.setState({ currentPlan: otherPlan, otherPlan: currentPlan })\r\n    }\r\n  }\r\n\r\n  confirmData = (history, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name } = e.target;\r\n\r\n    this.setState({\r\n      user: {\r\n        name: name.value\r\n      }\r\n    });\r\n\r\n    history.push('/confirmacion')\r\n  }\r\n\r\n  render() {\r\n    const { currentPlan, otherPlan, user } = this.state;\r\n\r\n    return (\r\n      <Router basename='/Desafio-EC'>\r\n        <Switch>\r\n          <Route path='/' exact render={() => <Suscription changeTypePlan={this.changePlan} plan={currentPlan} />} />\r\n          <Route path='/datos' render={(props) => <CreditCard {...props} changeTypePlan={this.changePlan} confirmData={this.confirmData} plan={currentPlan} otherPlan={otherPlan.type} />} />\r\n          <Route path='/confirmacion' render={() => <Confirmation name={user.name} plan={currentPlan} />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'jquery';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}